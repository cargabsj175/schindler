(function(global){global.CoSeMe=global.CoSeMe||{};function addAsConstructor(namespace,constructor){namespace[constructor.name]=constructor}function addAsSet(namespace,set){var descriptor;for(var member in set)if(set.hasOwnProperty(member)){descriptor=Object.getOwnPropertyDescriptor(set,member);Object.defineProperty(namespace,member,descriptor)}}global.CoSeMe.namespace=function(path,obj){var name,pathNames=path.split(".");var currentNamespace=this;for(var remaining=pathNames.length;remaining;remaining--){name=
pathNames.shift();if(!name)continue;if(currentNamespace[name]===undefined)currentNamespace[name]={};currentNamespace=currentNamespace[name];if(remaining===1)switch(typeof obj){case "function":if(!obj.name)throw new Error('Error adding constructor to "'+name+'". '+"The constructor has no name.");else addAsConstructor(currentNamespace,obj);break;case "object":addAsSet(currentNamespace,obj);break;default:throw new Error('Error extending namespace "'+name+'". '+"Only objects or constructors can be added to "+
"namespaces");break}}return currentNamespace}})(this);CoSeMe.namespace("crypto",CryptoJS);
CoSeMe.namespace("config",function(){return{logger:true,domain:"s.whatsapp.net",tokenData:{"v":"2.11.151","r":"Android-2.11.151-443","u":"WhatsApp/2.11.151 Android/4.3 Device/GalaxyS3","t":"PdA2DJyKoUrwLw1Bg6EIhzh502dF9noR9uFCllGk1377032097395{phone}","d":"Android"},auth:{host:"c2.whatsapp.net",port:443,domain:"s.whatsapp.net",options:{binaryType:"arraybuffer",useSSL:false,useSecureTransport:false},rc4Options:{drop:256/4},pbkdf2Options:{keySize:20*8/32,iterations:16},hmacLength:4},contacts:{"url_auth":"https://sro.whatsapp.net/v2/sync/a",
"url_query":"https://sro.whatsapp.net/v2/sync/q","method":"POST","authData":{"nc":"00000001","realm":"s.whatsapp.net","qop":"auth","digestUri":"WAWA/s.whatsapp.net","charSet":"utf-8","authMethod":"X-WAWA"}}}}());
CoSeMe.namespace("common",function(){var isOn=CoSeMe.config.logger;function Logger(topic){this._topic=topic||null;if(!topics.hasOwnProperty(topic))Logger.topics[topic]=true}Object.defineProperty(Logger,"topics",{value:{}});var topics=Logger.topics;Logger.on=function(){isOn=true};Logger.off=function(){isOn=false};Logger.disable=function(){Array.prototype.forEach.call(arguments,function(topic){topics[topic]=false})};Logger.enable=function(){Array.prototype.forEach.call(arguments,function(topic){topics[topic]=
true})};Logger.disableAll=function(){Object.keys(topics).forEach(function(topic){topics[topic]=false})};Logger.enableAll=function(){Object.keys(topics).forEach(function(topic){topics[topic]=true})};Logger.select=function(selection){Object.keys(selection).forEach(function(topic){topics[topic]=!!selection[topic]})};Logger.prototype.log=function(){};Logger.prototype.warn=function(){};Logger.prototype.error=function(){};Logger.prototype._message=function(args,kind){if(!isOn||this._topic&&!topics[this._topic])return;
kind=kind||"log";var stack;try{throw new Error;}catch(err){stack=err.stack}var where=stack.split("\n")[2];var message=getMessage(this._topic,where,args);putMessage(kind,message)};function getMessage(topic,where,args){var token,tokens=[];for(var i=0,l=args.length;i<l;i++){token=stringify(args[i]);tokens.push(token)}tokens.push("~ "+where);if(topic)tokens.push("["+topic+"]");return tokens.join(" ")}function stringify(obj){var string;if(typeof obj==="string")string=obj;else if(obj instanceof Error){var stack=
obj.stack||"";var sanitizedStack=stack.replace(/\n/g," > ");string=obj.name+': "'+obj.message+'" at '+sanitizedStack}else if(obj instanceof Date||obj instanceof RegExp)string=obj.toString();else string=JSON.stringify(obj);if(string==="{}")if(obj.target&&obj.type){var data=stringify(obj.data?obj.data:undefined);var obj=stringify(obj.target);string=stringify({type:obj.type,target:obj.target,data:data})}return string}function putMessage(kind,message){if(typeof console[kind]!=="function")kind="log";console[kind](message)}
return Logger}());
CoSeMe.namespace("utils",function(){var logger=new CoSeMe.common.Logger("utils");function ByteArrayWA(sizeOrUint32,initialSizeInBytes){var WordArray=CryptoJS.lib.WordArray;if(typeof sizeOrUint32==="number"){var sizeInBytes,sizeInWords;sizeInBytes=sizeOrUint32;sizeInWords=(sizeInBytes>>>2)+(sizeInBytes&3?1:0);this.initialByte=0;this.size=sizeInBytes;this.array=new WordArray.init(new Uint32Array(sizeInWords),0)}else if(sizeOrUint32 instanceof Uint32Array){var uint32Array=sizeOrUint32;this.initialByte=
0;this.size=uint32Array.buffer.byteLength;this.array=new WordArray.init(uint32Array,initialSizeInBytes||0)}else throw new Error("Expecting first parameter to be a number of an Uint32Array.");}ByteArrayWA.prototype={write:function(w,numBytes){numBytes=numBytes||1;w=w<<32-numBytes*8;for(var byt=0;byt<numBytes;byt++){if(this.isFull())throw new RangeError("Cannot extend a ByteArrayWA");var desp=24-byt*8;var b=(w&255<<desp)>>>desp;var i=this.array.sigBytes++;this.array.words[i>>>2]|=b<<24-(i&3)*8}},read:function(){try{var r=
this.get(0);this.initialByte++;return r}catch(x){return undefined}},finish:function(){var byteArray=new Uint8Array(this.array.words.buffer);var words=this.array.words;var finalWord=this.array.sigBytes>>>2;var currentWord=this.initialByte>>>2;var currentByte=currentWord<<2;for(;currentWord<=finalWord;currentWord++){var b3=byteArray[currentByte],b2=byteArray[currentByte+1];byteArray[currentByte]=byteArray[currentByte+3];byteArray[currentByte+1]=byteArray[currentByte+2];byteArray[currentByte+2]=b2;byteArray[currentByte+
3]=b3;currentByte+=4}var result={offset:this.initialByte,length:this.length,buffer:byteArray};this.array=null;return result},length:function length(){return this.array.sigBytes-this.initialByte},bufferSize:function bufferSize(){return this.size},isEmpty:function(){return this.array.sigBytes==this.initialByte},isFull:function(){return this.array.sigBytes==this.size},get:function(index){var i=this.initialByte+index;if(index<0||i>=this.array.sigBytes)throw new RangeError("index out of bounds.");var desp=
24-(i&3)*8;return(this.array.words[i>>>2]&255<<desp)>>>desp},writeAll:function(sequence){var numBytes=sequence.words&&sequence.sigBytes?4:1;var bytesLeft=sequence.sigBytes||sequence.length;if(numBytes>1)sequence=sequence.words;for(var i=0;bytesLeft>0;i++){var data=sequence[i];var bytesToCopy=bytesLeft<numBytes?bytesLeft:numBytes;this.write(data>>>32-bytesToCopy*8,bytesToCopy);bytesLeft-=numBytes}return this}};function ByteArray(size){var virtualSize=typeof size!=="undefined"?Math.floor(size):1023;
var bufSize=virtualSize+1;var array=new Uint8Array(bufSize);var start=0,end=0;function _nextIndex(index){var next;return(next=index+1)===bufSize?0:next}function _dumpContent(destination){if(end<start){destination.set(array.subarray(start,bufSize));destination.set(array.subarray(0,end),bufSize-start)}else destination.set(array.subarray(start,end))}Object.defineProperty(this,"bufferSize",{get:function(){return virtualSize}});Object.defineProperty(this,"length",{get:function(){return end-start+(end<
start?bufSize:0)}});Object.defineProperty(this,"buffer",{get:function(){var a=new Uint8Array(this.length);_dumpContent(a);return a.buffer}});this.isEmpty=function(){return start===end};this.isFull=function(){return this.length===virtualSize};this.write=function(n){if(this.isFull())this.resize(bufSize*2);array[end]=n;end=_nextIndex(end)};this.read=function(){if(this.isEmpty())return undefined;var item=array[start];start=_nextIndex(start);return item};this.resize=function(newSize){var contentLength=
this.length;var newVirtualSize=Math.max(Math.floor(newSize),contentLength);if(newVirtualSize!==virtualSize){var newBufferSize=newVirtualSize+1;var newArray=new Uint8Array(newBufferSize);_dumpContent(newArray);virtualSize=newVirtualSize;bufSize=newBufferSize;array=newArray;start=0;end=contentLength}return virtualSize};this.get=function(i){if(i<0||i>=this.length)throw new RangeError("index out of bounds.");var fixedIndex=start+i;fixedIndex-=fixedIndex>=bufSize?bufSize:0;return array[fixedIndex]};this.writeAll=
function(sequence){for(var i=0,l=sequence.length;i<l;i++)this.write(sequence[i])}}ByteArray.fromBuffer=function(buffer){if(buffer instanceof ArrayBuffer)buffer=new Uint8Array(buffer);if(buffer instanceof Uint8Array){var output=new ByteArray(buffer.length);output.writeAll(buffer);return output}throw new Error("fromBuffer(buffer) only works with instances of "+"ArrayBuffer or Uint8Array.");};function hex(array){if(array instanceof ArrayBuffer)array=new Uint8Array(array);else if(array instanceof ByteArray)array=
new Uint8Array(array.buffer);else if(array instanceof ByteArrayWA)return CryptoJS.enc.Hex.stringify(array.buffer);var c,hexrepr="";for(var i=0,l=array.length;i<l;i++){c=array[i].toString(16);hexrepr+=c.length<2?"0"+c:c}return hexrepr}function bytesFromLatin1(string){var buffer=new Uint8Array(string.length);var b1,b0,c;for(var i=0,l=string.length;i<l;i++){c=string.charCodeAt(i);b1=(c&65280)>>>8;if(b1)logger.warn("High order byte !== 0x00 in character number",i,"of ",string);b0=c&255;buffer[i]=b0}return buffer}
function latin1FromBytes(buffer){var result="";var l=buffer.length;for(var i=0;i<l;i++)result=result+String.fromCharCode(buffer[i]);return result}var utils={urlencode:function _urlencode(params){var pairs=[];for(var paramName in params)if(Array.isArray(params[paramName])){var aux=[];for(var i in params[paramName])aux.push(encodeURIComponent(paramName+"[]")+"="+encodeURIComponent(params[paramName][i]));pairs.push(aux.join("&"))}else pairs.push(encodeURIComponent(paramName)+"="+encodeURIComponent(params[paramName]));
return pairs.join("&")},len:function _len(obj){if(typeof obj!=="object"&&typeof obj.length==="number")return obj.length;if(typeof obj==="object")return Object.keys(obj).length},ByteArray:ByteArray,ByteArrayWA:ByteArrayWA,bytesFromLatin1:bytesFromLatin1,latin1FromBytes:latin1FromBytes,utf8FromString:function(string){return unescape(encodeURIComponent(string))},stringFromUtf8:function(string){return decodeURIComponent(escape(string))},bytesFromHex:function(hexrepr){hexrepr=hexrepr.toLowerCase().replace(/[^0-9a-f]/g,
"");var aByte,array=new Uint8Array(hexrepr.length/2);for(var i=0,l=array.length;i<l;i++){aByte=hexrepr.substr(2*i,2);array[i]=parseInt(aByte,16)}return array},hex:hex,aToBlob:function(base64,mimeType){var latin1=atob(base64);return utils.latin1ToBlob(latin1,mimeType)},latin1ToBlob:function(latin1,mimeType){return new Blob([utils.bytesFromLatin1(latin1)],{type:mimeType})},random:function _random(min,max){return Math.random()*(max-min)+min},formatStr:function _formatStr(template,params){if(typeof params!=
"object"){logger.warn("`params` parameter is not an object");return template}var param;for(param in params)template=template.replace("{"+param+"}",params[param],"g");return template}};return utils}());
CoSeMe.namespace("protocol.emitters",function(){function XML(tree){this._tree=tree}XML.prototype.getRepresentation=function(){var tree=this._tree;var repr="<"+tree.tag;var attributes=tree.attributes;if(typeof attributes==="object")for(var name in attributes)if(attributes.hasOwnProperty(name))repr+=" "+name+'="'+tree.getAttributeValue(name)+'"';repr+=">\n";var data=tree.data;if(data)repr+=data;var children=tree.children;if(Array.isArray(children))for(var i=0,l=children.length;i<l;i++)repr+=children[i].toString();
repr+="</"+tree.tag+">\n";return repr};return XML}());
CoSeMe.namespace("protocol",function(){var XMLEmitter=CoSeMe.protocol.emitters.XML;function Tree(tag,options){options=options||{};this.tag=tag;this.children=options.children||[];this.attributes=options.attributes||{};this._data=options.data||null}Tree.tagEquals=function(tree,name){return tree.tag===name};Tree.require=function(tree,name){if(!Tree.tagEquals(tree,name))throw new Error("Failed require. name: "+name);};Tree.prototype.toString=function(){var emitter=new XMLEmitter(this);return emitter.getRepresentation()};
Tree.prototype.getChild=function(identifier){var found,child=null;var children=this.children;if(children&&children.length>0)if(typeof identifier==="number"&&identifier<children.length)child=children[identifier];else if(typeof identifier==="string")for(var i=0,l=children.length;i<l&&!child;i++)if(children[i].tag===identifier)child=children[i];return child};Object.defineProperty(Tree.prototype,"data",{get:function(){var value=this._data;if(value&&value.hexdata)value=CryptoJS.enc.Latin1.stringify(CryptoJS.enc.Hex.parse(value.hexdata));
return value},set:function(data){this._data=data}});Object.defineProperty(Tree.prototype,"hexData",{get:function(){return this._data&&this._data.hexdata}});Tree.prototype.getAttributeValue=function(attributeName,getHex){if(!this.attributes)return null;var value=this.attributes[attributeName];if(value&&value.hexdata)value=getHex?value.hexdata:CryptoJS.enc.Latin1.stringify(CryptoJS.enc.Hex.parse(value.hexdata));return typeof value!=="undefined"?value:null};Tree.prototype.getAllChildren=function(tag){var all=
typeof tag!=="undefined";var filteredChildren=this.children.filter(function(child){return all||child.tag===tag});return filteredChildren};return Tree}());
CoSeMe.namespace("protocol.dictionary",function(){var code2Token=["","","","","","account","ack","action","active","add","after","ib","all","allow","apple","audio","auth","author","available","bad-protocol","bad-request","before","Bell.caf","body","Boing.caf","cancel","category","challenge","chat","clean","code","composing","config","conflict","contacts","count","create","creation","default","delay","delete","delivered","deny","digest","DIGEST-MD5-1","DIGEST-MD5-2","dirty","elapsed","broadcast","enable",
"encoding","duplicate","error","event","expiration","expired","fail","failure","false","favorites","feature","features","field","first","free","from","g.us","get","Glass.caf","google","group","groups","g_notify","g_sound","Harp.caf","http://etherx.jabber.org/streams","http://jabber.org/protocol/chatstates","id","image","img","inactive","index","internal-server-error","invalid-mechanism","ip","iq","item","item-not-found","user-not-found","jabber:iq:last","jabber:iq:privacy","jabber:x:delay","jabber:x:event",
"jid","jid-malformed","kind","last","latitude","lc","leave","leave-all","lg","list","location","longitude","max","max_groups","max_participants","max_subject","mechanism","media","message","message_acks","method","microsoft","missing","modify","mute","name","nokia","none","not-acceptable","not-allowed","not-authorized","notification","notify","off","offline","order","owner","owning","paid","participant","participants","participating","password","paused","picture","pin","ping","platform","pop_mean_time",
"pop_plus_minus","port","presence","preview","probe","proceed","prop","props","p_o","p_t","query","raw","reason","receipt","receipt_acks","received","registration","relay","remote-server-timeout","remove","Replaced by new connection","request","required","resource","resource-constraint","response","result","retry","rim","s.whatsapp.net","s.us","seconds","server","server-error","service-unavailable","set","show","sid","silent","sound","stamp","unsubscribe","stat","status","stream:error","stream:features",
"subject","subscribe","success","sync","system-shutdown","s_o","s_t","t","text","timeout","TimePassing.caf","timestamp","to","Tri-tone.caf","true","type","unavailable","uri","url","urn:ietf:params:xml:ns:xmpp-sasl","urn:ietf:params:xml:ns:xmpp-stanzas","urn:ietf:params:xml:ns:xmpp-streams","urn:xmpp:delay","urn:xmpp:ping","urn:xmpp:receipts","urn:xmpp:whatsapp","urn:xmpp:whatsapp:account","urn:xmpp:whatsapp:dirty","urn:xmpp:whatsapp:mms","urn:xmpp:whatsapp:push","user","username","value","vcard",
"version","video","w","w:g","w:p","w:p:r","w:profile:picture","wait","x","xml-not-well-formed","xmlns","xmlns:stream","Xylophone.caf","1","WAUTH-1"];var token2Code={};for(var i=code2Token.length-1;i>=0;i--)token2Code[code2Token[i]]=i;var STREAM_START=1;var SHORT_LIST_MARK=248;var LONG_LIST_MARK=249;var EMPTY_LIST_MARK=0;var SURROGATE_MARK=254;var SHORT_STRING_MARK=252;var LONG_STRING_MARK=253;var JID_MARK=250;var MAC_LENGTH=4;var HEADER_LENGTH=3;return{code2Token:code2Token,token2Code:token2Code,
STREAM_START:STREAM_START,SHORT_LIST_MARK:SHORT_LIST_MARK,LONG_LIST_MARK:LONG_LIST_MARK,EMPTY_LIST_MARK:EMPTY_LIST_MARK,SURROGATE_MARK:SURROGATE_MARK,SHORT_STRING_MARK:SHORT_STRING_MARK,LONG_STRING_MARK:LONG_STRING_MARK,JID_MARK:JID_MARK,MAC_LENGTH:MAC_LENGTH,HEADER_LENGTH:HEADER_LENGTH}}());
CoSeMe.namespace("protocol",function(){var k=CoSeMe.protocol.dictionary;var token2Code=k.token2Code;var ByteArray=CoSeMe.utils.ByteArrayWA;var logger=new CoSeMe.common.Logger("BinaryWriter");var IS_COUNTING=true;var IS_RAW=true;function BinaryWriter(connection){this._socket=connection.socket;this.outputKey=undefined}var STREAM_START=k.STREAM_START;BinaryWriter.prototype.streamStart=function(domain,resource,callback){var writerTask=this.newWriteTask(callback);setTimeout(function(){writerTask._sendProtocol(IS_COUNTING);
writerTask._sendProtocol();writerTask._streamStart(domain,resource,IS_COUNTING);writerTask._streamStart(domain,resource)})};BinaryWriter.prototype._sendProtocol=function(counting){var streamAttributesCount=2;this.resetBuffer(counting,IS_RAW);this.writeASCII("WA",counting);this.writeByte(STREAM_START,counting);this.writeByte(streamAttributesCount,counting);this.flushBuffer(counting)};BinaryWriter.prototype._streamStart=function(domain,resource,counting){var attributes={to:domain,resource:resource};
this.resetBuffer(counting);this.writeListStart(1+2*CoSeMe.utils.len(attributes),counting);this.writeInt8(1,counting);this.writeAttributes(attributes,undefined,counting);this.sendMessage(counting)};BinaryWriter.prototype.write=function(tree,callback){var writerTask=this.newWriteTask(callback);setTimeout(function(){writerTask._write(tree,IS_COUNTING);writerTask._write(tree)})};BinaryWriter.prototype.newWriteTask=function(callback){var task=Object.create(this);task.newWriteTask=undefined;task._callback=
callback;return task};BinaryWriter.prototype._write=function(tree,counting){this.resetBuffer(counting);if(!tree)this.writeInt8(0,counting);else{this.writeTree(tree,counting);!counting&&logger.log(tree.toString())}this.sendMessage(counting)};BinaryWriter.prototype.writeTree=function(tree,counting){var length=1+2*CoSeMe.utils.len(tree.attributes);if(tree.children.length>0)length++;if(tree.data!==null)length++;this.writeListStart(length,counting);this.writeString(tree.tag,counting);this.writeAttributes(tree.attributes,
tree,counting);if(tree.data)this.writeBytes(tree.data,counting);var childrenCount=tree.children.length;if(childrenCount!==0){this.writeListStart(childrenCount,counting);for(var i=0;i<childrenCount;i++)this.writeTree(tree.children[i],counting)}};var SHORT_LIST_MARK=k.SHORT_LIST_MARK;var LONG_LIST_MARK=k.LONG_LIST_MARK;var EMPTY_LIST_MARK=k.EMPTY_LIST_MARK;BinaryWriter.prototype.writeListStart=function(length,counting){if(length===0)counting?this.messageLength++:this.message.write(EMPTY_LIST_MARK);
else if(length<256){counting?this.messageLength++:this.message.write(SHORT_LIST_MARK);this.writeInt8(length,counting)}else{counting?this.messageLength++:this.message.write(LONG_LIST_MARK);this.writeInt16(length,counting)}return this};BinaryWriter.prototype.writeAttributes=function(attrs,tree,counting){var attributes=attrs||{};var value;for(var attrName in attributes)if(attributes.hasOwnProperty(attrName)){value=tree?tree.getAttributeValue(attrName):attributes[attrName];this.writeString(attrName,counting);
this.writeString(value,counting)}return this};BinaryWriter.prototype.writeString=function(string,counting){if(typeof string!=="string"){logger.warn("Expecting a string!",typeof string,"given instead.");if(string===null||string===undefined)string="";else string=string.toString()}if(token2Code.hasOwnProperty(string))this.writeToken(token2Code[string],counting);else if(string.indexOf("@")<1)this.writeBytes(string,counting);else{var userAndServer=string.split("@");var user=userAndServer[0];var server=
userAndServer[1];this.writeJid(user,server,counting)}return this};var SURROGATE_MARK=k.SURROGATE_MARK;BinaryWriter.prototype.writeToken=function(code,counting){if(code<245)counting?this.messageLength++:this.message.write(code);else if(code<=500){counting?this.messageLength++:this.message.write(SURROGATE_MARK);counting?this.messageLength++:this.message.write(code-245)}return this};var SHORT_STRING_MARK=k.SHORT_STRING_MARK;var LONG_STRING_MARK=k.LONG_STRING_MARK;BinaryWriter.prototype.writeBytes=function(string,
counting){var bytes=CoSeMe.utils.bytesFromLatin1(string);var l=bytes.length;if(l<256){counting?this.messageLength++:this.message.write(SHORT_STRING_MARK);this.writeInt8(l,counting)}else{counting?this.messageLength++:this.message.write(LONG_STRING_MARK);this.writeInt24(l,counting)}for(var i=0;i<l;i++)counting?this.messageLength++:this.message.write(bytes[i]);return this};var JID_MARK=k.JID_MARK;BinaryWriter.prototype.writeJid=function(user,server,counting){counting?this.messageLength++:this.message.write(JID_MARK);
if(user)this.writeString(user,counting);else this.writeToken(0,counting);this.writeString(server,counting);return this};BinaryWriter.prototype.writeASCII=function(input,counting){var character;for(var i=0,l=input.length;i<l;i++){character=input.charCodeAt(i);this.writeByte(character,counting)}return this};BinaryWriter.prototype.writeByte=function(i,counting){this.writeInt8(i,counting);return this};BinaryWriter.prototype.writeInt8=function(i,counting){counting?this.messageLength++:this.message.write(i&
255);return this};BinaryWriter.prototype.writeInt16=function(i,counting){counting?this.messageLength++:this.message.write((i&65280)>>>8);counting?this.messageLength++:this.message.write(i&255);return this};BinaryWriter.prototype.writeInt24=function(i,counting){counting?this.messageLength++:this.message.write((i&16711680)>>>16);counting?this.messageLength++:this.message.write((i&65280)>>>8);counting?this.messageLength++:this.message.write(i&255);return this};BinaryWriter.prototype.sendMessage=function(counting){if(counting)return;
if(this.isEncrypted())this.cipherMessage();this.addMessageHeader();this.flushBuffer(counting)};BinaryWriter.prototype.flushBuffer=function(counting){if(counting)return;try{var out,offset,realOutLength;if(this.isRaw){out=this.message.finish().buffer;offset=0;realOutLength=this.messageLength}else{var completeView=new Uint32Array(this.outBuffer);var completeViewLength=completeView.buffer.byteLength;out=(new ByteArray(completeView,completeViewLength)).finish().buffer;offset=HEADER_PADDING;realOutLength=
HEADER_LENGTH+this.messageLength}console.info("mdata: "+String.fromCharCode.apply(null,new Uint8Array(out.buffer)));this._socket.send(out.buffer,offset,realOutLength);if(typeof this._callback==="function")this._callback(null,realOutLength)}catch(x){logger.log("Socket state:",this._socket.readyState);logger.error(x);if(typeof this._callback==="function")this._callback(new Error("DISCONNECTED"))}};var HEADER_LENGTH=k.HEADER_LENGTH;var HEADER_PADDING=4-HEADER_LENGTH%4;var COMPLETE_HEADER_LENGTH=HEADER_LENGTH+
HEADER_PADDING;var MAC_LENGTH=k.MAC_LENGTH;BinaryWriter.prototype.resetBuffer=function(counting,isRaw){if(counting)this.messageLength=0;else{this.isRaw=isRaw;if(isRaw)this.message=new ByteArray(this.messageLength);else{var macLength=this.isEncrypted()?MAC_LENGTH:0;this.messageLength+=macLength;this.messagePadding=4-this.messageLength%4;this.completeMessageLength=this.messageLength+this.messagePadding;var totalSize=COMPLETE_HEADER_LENGTH+this.completeMessageLength;this.outBuffer=(new Uint8Array(totalSize)).buffer;
var headerView=new Uint32Array(this.outBuffer,0,COMPLETE_HEADER_LENGTH>>>2);var messageView=new Uint32Array(this.outBuffer,COMPLETE_HEADER_LENGTH);this.header=new ByteArray(headerView);this.message=new ByteArray(messageView)}}};BinaryWriter.prototype.cipherMessage=function(){var textAndMac=this.outputKey.encodeMessage(this.message);for(var i=0;i<MAC_LENGTH;i++)this.message.write(textAndMac.hmacSHA1.get(i))};BinaryWriter.prototype.addMessageHeader=function(){for(var i=0;i<HEADER_PADDING;i++)this.header.write(0);
var messageLength=this.messageLength;var encryptedFlag=this.isEncrypted()?16:0;var b2=encryptedFlag|(messageLength&16711680)>>>16;var b1=(messageLength&65280)>>>8;var b0=messageLength&255;this.header.write(b2);this.header.write(b1);this.header.write(b0)};BinaryWriter.prototype.isEncrypted=function(){return!!this.outputKey};return BinaryWriter}());
CoSeMe.namespace("protocol",function(){var k=CoSeMe.protocol.dictionary;var code2Token=k.code2Token;var ByteArray=CoSeMe.utils.ByteArrayWA;var Tree=CoSeMe.protocol.Tree;var logger=new CoSeMe.common.Logger("BinaryReader");function BinaryReader(){this.incoming=[];this.incomingCount=0;this.incomingOffset={chunk:0,aByte:0};this.partialConsumed=0;this.inputKey=null}var STREAM_START=k.STREAM_START;BinaryReader.prototype.startListening=function(connection){this.socket=connection.socket;this.isStreamStartRead=
false;var self=this;this.socket.ondata=function(evt){self.onSocketData(evt.data)}};BinaryReader.prototype.onSocketData=function(rawData){logger.log("Received socket data:",rawData.byteLength,"bytes!");rawData&&this.addDataChunk(rawData);setTimeout(this.checkForAnotherTree.bind(this))};BinaryReader.prototype.checkForAnotherTree=function(){if(this.waitingForMessage())return;if(!this.isStreamStartRead){this.readStreamStart();this.isStreamStartRead=true}else this.readNextTree();setTimeout(this.checkForAnotherTree.bind(this))};
BinaryReader.prototype.readStreamStart=function(){var readerTask=this.newReaderTask(this.onStreamStart);setTimeout(function(){readerTask._readStreamStart()})};BinaryReader.prototype.readNextTree=function(){var readerTask=this.newReaderTask(this.onTree);setTimeout(function(){readerTask._readNextTree()})};BinaryReader.prototype.newReaderTask=function(callback){var task=Object.create(this);this.readStanza();task.newReaderTask=undefined;task.mac=this.mac;task.message=this.message;task.stanzaSize=this.stanzaSize;
task.isEncrypted=this.isEncrypted;task.callback=callback;this.finishReading();return task};BinaryReader.prototype._readStreamStart=function(){var listMark=this.message.read();var listSize=this.readListSize(listMark);var tag=this.message.read();var err=null;if(tag===STREAM_START){var attributeCount=(listSize-2+listSize%2)/2;this.readAttributes(attributeCount)}else{err=new Error("Expecting STREAM_START");logger.error(err)}if(typeof this.callback==="function")this.callback(err)};BinaryReader.prototype._readNextTree=
function(){var err=null,tree;try{tree=this.readTree();logger.log(tree.toString())}catch(e){err=e;tree=undefined;logger.error(e)}if(typeof this.callback==="function")this.callback(err,tree)};BinaryReader.prototype.finishReading=function(){this.freeIncoming();this.mac=null;this.message=null;this.isEncrypted=undefined;this.stanzaSize=undefined};BinaryReader.prototype.freeIncoming=function(){var currentChunk,releasedBytes=0;var offset=this.incomingOffset;var chunkIndex=offset.chunk;for(var i=0;i<chunkIndex;i++){currentChunk=
this.incoming.shift();releasedBytes+=currentChunk.length}releasedBytes+=offset.aByte-this.partialConsumed;this.partialConsumed=offset.aByte;offset.chunk=0;this.incomingCount-=releasedBytes};BinaryReader.prototype.addDataChunk=function(rawData){var data=new Uint8Array(rawData);this.incoming[this.incoming.length]=data;this.incomingCount+=data.length};var HEADER_LENGTH=k.HEADER_LENGTH;BinaryReader.prototype.waitingForMessage=function(){if(this.stanzaSize===undefined)if(this.incomingCount<HEADER_LENGTH)return true;
else{var b2=this.readIncoming();var b1=this.readIncoming();var b0=this.readIncoming();this.stanzaSize=(b1<<8)+b0;this.isEncrypted=!!(b2&128)}return this.incomingCount<HEADER_LENGTH+this.stanzaSize};BinaryReader.prototype.readIncoming=function(){var offset=this.incomingOffset;var byteIndex=offset.aByte;var chunkIndex=offset.chunk;var currentChunk=this.incoming[chunkIndex];var aByte=currentChunk[byteIndex];byteIndex++;if(byteIndex===currentChunk.length){if(this.partialConsumed)this.incoming[chunkIndex]=
new Uint8Array(this.incoming[chunkIndex].buffer,this.partialConsumed);chunkIndex++;byteIndex=0;this.partialConsumed=0}offset.aByte=byteIndex;offset.chunk=chunkIndex;return aByte};BinaryReader.prototype.readStanza=function(){this.fillMessageBuffer();var isEncrypted=this.isEncrypted;if(isEncrypted&&!this.inputKey)throw new Error("The messages are ciphered but there is no key to "+"decipher.");if(isEncrypted)this.decipherMessage()};var MAC_LENGTH=k.MAC_LENGTH;BinaryReader.prototype.fillMessageBuffer=
function(){var messageLength=this.stanzaSize;if(this.isEncrypted){messageLength-=MAC_LENGTH;this.mac=new ByteArray(MAC_LENGTH);for(var i=0;i<MAC_LENGTH;i++)this.mac.write(this.readIncoming())}this.message=new ByteArray(messageLength);for(var i=0;i<messageLength;i++)this.message.write(this.readIncoming())};BinaryReader.prototype.decipherMessage=function(){this.message=this.inputKey.decodeMessage(this.message,this.mac)};BinaryReader.prototype.readTree=function(){var listMark=this.message.read();var listSize=
this.readListSize(listMark);var stringMark=this.message.read();if(stringMark===2)return null;var tag=this.readString(stringMark);if(listSize===0||tag===null)throw new SyntaxError("0 list or null tag!");var attributeCount=(listSize-2+listSize%2)/2;var attributes=this.readAttributes(attributeCount);if(listSize%2===1)return new Tree(tag,{attributes:attributes});var listMarkCandidate=this.message.read();if(this.isListMark(listMarkCandidate))return new Tree(tag,{attributes:attributes,children:this.readList(listMarkCandidate)});
stringMark=listMarkCandidate;return new Tree(tag,{attributes:attributes,data:this.readString(stringMark)})};BinaryReader.prototype.readList=function(listMark){var listSize=this.readListSize(listMark);var children=[];for(var i=0;i<listSize;i++)children.push(this.readTree());return children};BinaryReader.prototype.isListMark=function(b){return b==SHORT_LIST_MARK||(b==LONG_LIST_MARK||b==EMPTY_LIST_MARK)};BinaryReader.prototype.readInt8=function(){return this.message.read()};BinaryReader.prototype.readInt16=
function(){var b1=this.message.read();var b0=this.message.read();return b1!==undefined&&b0!==undefined?(b1<<8)+b0:undefined};BinaryReader.prototype.readInt24=function(){var b2=this.message.read();var b1=this.message.read();var b0=this.message.read();return b2!==undefined&&(b1!==undefined&&b0!==undefined)?(b2<<16)+(b1<<8)+b0:undefined};var SHORT_LIST_MARK=k.SHORT_LIST_MARK;var LONG_LIST_MARK=k.LONG_LIST_MARK;var EMPTY_LIST_MARK=k.EMPTY_LIST_MARK;BinaryReader.prototype.readListSize=function(sizeMark){var size;
switch(sizeMark){case EMPTY_LIST_MARK:size=0;break;case SHORT_LIST_MARK:size=this.readInt8();break;case LONG_LIST_MARK:size=this.readInt16();break;default:var error="Invalid list size: sizeMark = "+sizeMark;throw new SyntaxError(error);break}return size};BinaryReader.prototype.readAttributes=function(attributeCount){var key,value,attributes={};while(attributeCount>0){key=this.readString(this.message.read());value=this.readString(this.message.read());attributes[key]=value;attributeCount--}return attributes};
var SHORT_STRING_MARK=k.SHORT_STRING_MARK;var LONG_STRING_MARK=k.LONG_STRING_MARK;var SURROGATE_MARK=k.SURROGATE_MARK;var JID_MARK=k.JID_MARK;BinaryReader.prototype.readString=function(stringMark,returnRaw){var string=null;if(stringMark>4&&stringMark<245){var code=stringMark;string=this.getToken(code)}else if(stringMark===SHORT_STRING_MARK){var size=this.readInt8();var buffer=new Uint8Array(size);this.fillArray(buffer,size);string={hexdata:this.bufferToString(buffer)}}else if(stringMark===LONG_STRING_MARK){var size=
this.readInt24();var buffer=new Uint8Array(size);this.fillArray(buffer,size);string={hexdata:this.bufferToString(buffer)}}else if(stringMark===SURROGATE_MARK){var code=this.message.read();string=this.getToken(code+245)}else if(stringMark===JID_MARK){var user=this.readString(this.message.read(),true);var server=this.readString(this.message.read(),true);if(user&&server)string=user+"@"+server;else if(server)string=server;else throw new SyntaxError("could not reconstruct JID.");}else throw new SyntaxError("could not find a string.");
if(returnRaw&&(string&&string.hexdata))string=CryptoJS.enc.Latin1.stringify(CryptoJS.enc.Hex.parse(string.hexdata));return string};BinaryReader.prototype.getToken=function(code){if(code>=0&&code<code2Token.length)return code2Token[code];throw new SyntaxError("Invalid token: code = "+code);};BinaryReader.prototype.fillArray=function(buffer,length){for(var i=0;i<length;i++)buffer[i]=this.message.read()};BinaryReader.prototype.bufferToString=function(buffer){var charArray=[];var c;for(var i=0,l=buffer.length;i<
l;i++){c=Number(buffer[i]).toString(16);if(buffer[i]<16)c="0"+c;charArray.push(c)}return charArray.join("")};return BinaryReader}());
CoSeMe.namespace("http",function(){var logger=new CoSeMe.common.Logger("http");return{doRequest:function _doRequest(operation,params,onready,onerror){var URL="https://v.whatsapp.net/v2/"+operation+"?"+CoSeMe.utils.urlencode(params);logger.log("Request:",URL);var xhr=new XMLHttpRequest({mozSystem:true});xhr.onload=function(){onready&&onready.call(this,this.response)};xhr.onerror=onerror;xhr.open("GET",URL);xhr.overrideMimeType("json");xhr.responseType="json";xhr.setRequestHeader("User-Agent",CoSeMe.config.tokenData["u"]);
xhr.setRequestHeader("Accept","text/json");xhr.send()},doContactsRequest:function _doContactsRequest(authField,params,onready,onerror){var xhr=new XMLHttpRequest({mozSystem:true});xhr.onload=function(){onready&&onready.call(this,this.response)};xhr.onerror=onerror;if(params)xhr.open(CoSeMe.config.contacts.method,CoSeMe.config.contacts.url_query);else xhr.open(CoSeMe.config.contacts.method,CoSeMe.config.contacts.url_auth);xhr.overrideMimeType("json");xhr.responseType="json";xhr.setRequestHeader("User-Agent",
CoSeMe.config.tokenData["u"]);xhr.setRequestHeader("Authorization",authField);xhr.setRequestHeader("Accept","text/json");if(params){var data=CoSeMe.utils.urlencode(params);logger.log("Contact request parameters:",data);xhr.send(data)}else xhr.send()}}}());
CoSeMe.namespace("registration",function(){function getToken(phone){var classesMd5=atob("MOpsiNsR+nHEv0dFc3dqmA==");var prefix=atob("Y29tLndoYXRzYXBw");var signature=atob("MIIDMjCCAvCgAwIBAgIETCU2pDALBgcqhkjOOAQDBQAwfDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFDASBgNVBAcTC1NhbnRhIENsYXJhMRYwFAYDVQQKEw1XaGF0c0FwcCBJbmMuMRQwEgYDVQQLEwtFbmdpbmVlcmluZzEUMBIGA1UEAxMLQnJpYW4gQWN0b24wHhcNMTAwNjI1MjMwNzE2WhcNNDQwMjE1MjMwNzE2WjB8MQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEUMBIGA1UEBxMLU2FudGEgQ2xhcmExFjAUBgNVBAoTDVdoYXRzQXBwIEluYy4xFDASBgNVBAsTC0VuZ2luZWVyaW5nMRQwEgYDVQQDEwtCcmlhbiBBY3RvbjCCAbgwggEsBgcqhkjOOAQBMIIBHwKBgQD9f1OBHXUSKVLfSpwu7OTn9hG3UjzvRADDHj+AtlEmaUVdQCJR+1k9jVj6v8X1ujD2y5tVbNeBO4AdNG/yZmC3a5lQpaSfn+gEexAiwk+7qdf+t8Yb+DtX58aophUPBPuD9tPFHsMCNVQTWhaRMvZ1864rYdcq7/IiAxmd0UgBxwIVAJdgUI8VIwvMspK5gqLrhAvwWBz1AoGBAPfhoIXWmz3ey7yrXDa4V7l5lK+7+jrqgvlXTAs9B4JnUVlXjrrUWU/mcQcQgYC0SRZxI+hMKBYTt88JMozIpuE8FnqLVHyNKOCjrh4rs6Z1kW6jfwv6ITVi8ftiegEkO8yk8b6oUZCJqIPf4VrlnwaSi2ZegHtVJWQBTDv+z0kqA4GFAAKBgQDRGYtLgWh7zyRtQainJfCpiaUbzjJuhMgo4fVWZIvXHaSHBU1t5w//S0lDK2hiqkj8KpMWGywVov9eZxZy37V26dEqr/c2m5qZ0E+ynSu7sqUD7kGx/zeIcGT0H+KAVgkGNQCo5Uc0koLRWYHNtYoIvt5R3X6YZylbPftF/8ayWTALBgcqhkjOOAQDBQADLwAwLAIUAKYCp0d6z4QQdyN74JDfQ2WCyi8CFDUM4CaNB+ceVXdKtOrNTQcc0e+t");var k=
CryptoJS.enc.Base64.parse("PkTwKSZqUfAUyR0rPQ8hYJ0wNsQQ3dW1+3SCnyTXIfEAxxS75FwkDf47wNv/c8pP3p0GXKR6OOQmhyERwx74fw1RYSU10I4r1gyBVDbRJ40pidjM41G1I1oN");var f=CoSeMe.utils.bytesFromLatin1(atob(""));
var KEY=CoSeMe.utils.bytesFromLatin1("The piano has been drinking");var count=0;var l=f.length;for(var i=0;i<l;i++){f[i]=f[i]^KEY[count++];if(count==KEY.length-1)count=0}var d=CryptoJS.enc.Latin1.parse(prefix+CoSeMe.utils.latin1FromBytes(f));var key2=CryptoJS.PBKDF2(d,k,{keySize:80*8/32,iterations:128}).toString(CryptoJS.enc.UInt8Array);var opad=new Uint8Array(64);var ipad=new Uint8Array(64);for(i=0;i<64;i++){opad[i]=92^key2[i];ipad[i]=54^key2[i]}ipad=CryptoJS.enc.UInt8Array.parse(ipad);opad=CryptoJS.enc.UInt8Array.parse(opad);
var data=CryptoJS.enc.Latin1.parse(signature+classesMd5+phone);return CryptoJS.SHA1(opad.concat(CryptoJS.SHA1(ipad.concat(data)))).toString(CryptoJS.enc.Base64)}function getRealDeviceId(aSeed){var seed=aSeed||(Math.random()*1E16).toString(36).substring(2,10);var id=CryptoJS.SHA1(seed).toString(CryptoJS.enc.Latin1).substring(0,20);return{seed:seed,id:id}}return{getCode:function(countryCode,phone,onready,onerror,deviceId){var params=Object.create(null);params["cc"]=countryCode;params["in"]=phone;params["lc"]=
"US";params["lg"]="en";params["mcc"]="000";params["mnc"]="000";params["method"]="sms";var seedAndId=getRealDeviceId(deviceId);params["id"]=seedAndId.id;params["token"]=getToken(phone);CoSeMe.http.doRequest("code",params,onready,onerror);return seedAndId.seed},register:function(countryCode,phone,registerCode,onready,onerror,deviceId){var params=Object.create(null);params["cc"]=countryCode;params["in"]=phone;params["code"]=registerCode;var seedAndId=getRealDeviceId(deviceId);params["id"]=seedAndId.id;
CoSeMe.http.doRequest("register",params,onready,onerror);return seedAndId.id}}}());
CoSeMe.namespace("media",function(){var logger=new CoSeMe.common.Logger("media");var MAX_UPLOAD_BODY_ANSWER=8192*7;function _latin1(array){var c,latinarray=[];for(var i=0,l=array.length;i<l;i++){c=String.fromCharCode(array[i]);latinarray.push(c)}return latinarray.join("")}function _str2ab(str){var buf=new ArrayBuffer(str.length);var bufView=new Uint8Array(buf);for(var i=0,strLen=str.length;i<strLen;i++)bufView[i]=str.charCodeAt(i);return buf}function download(url,successCb,errorCb,progressCb){var blob=
null;var xhr=new XMLHttpRequest({mozSystem:true});xhr.open("GET",url,true);xhr.responseType="blob";xhr.setRequestHeader("User-Agent",CoSeMe.config.tokenData.u);xhr.onprogress=function(e){logger.log("XHR fired onprogress...");if(progressCb)if(e.lengthComputable){var pr=Math.floor(e.loaded/e.total*100);progressCb(pr)}};xhr.onload=function(){logger.log("XHR fired onload. xhr.status:",xhr.status);if(xhr.status===200||xhr.status===0){blob=xhr.response;if(successCb)successCb(blob)}else if(errorCb)errorCb(xhr.status)};
xhr.onerror=function(e){if(errorCb)errorCb(xhr.status)};xhr.send()}function upload(toJID,blob,uploadUrl,successCb,errorCb,progressCb){var TCPSocket=navigator.mozTCPSocket;if(!TCPSocket){if(errorCb)errorCb("No TCPSocket available.");return}var url=uploadUrl.replace("https://","");var host=url.slice(0,url.indexOf("/"));var port=host.split(":")[1]||443;logger.log("Going to open TCPSocket to host ",host,"and port",port);var _socket;try{_socket=TCPSocket.open(host,port,{binaryType:"arraybuffer",useSSL:true,
useSecureTransport:true})}catch(e){logger.error("Media Exception:",e.data);if(errorCb)errorCb(e.data);return}_socket.onerror=function(evt){logger.log("Socket error:",evt.data);var err=evt.data;var wrappedErr;if(err&&typeof err==="object")wrappedErr={name:err.name,type:err.type,message:err.message};else wrappedErr=err;logger.log("Wrapped error:",wrappedErr);if(errorCb)errorCb(wrappedErr)};_socket.onopen=function(){logger.log("Socket.onopen() called");var filesize=blob.size;var filetype=blob.type;logger.log("size:",
filesize,"filetype:",filetype);var reader=new FileReader;reader.addEventListener("loadend",function(){var el=new CryptoJS.lib.WordArray.init(reader.result);var crypto=CryptoJS.MD5(el)+"."+filetype.split("/")[1];logger.log("base64:",reader.result);logger.log("MD5+ext:",crypto);onCryptoReady(crypto,reader.result)});reader.readAsArrayBuffer(blob);function onCryptoReady(crypto,blobAsArrayBuffer){var boundary="zzXXzzYYzzXXzzQQ";var contentLength=0;var hBAOS="--"+boundary+"\r\n";hBAOS+='Content-Disposition: form-data; name="to"\r\n\r\n';
hBAOS+=toJID+"\r\n";hBAOS+="--"+boundary+"\r\n";hBAOS+='Content-Disposition: form-data; name="from"\r\n\r\n';hBAOS+=CoSeMe.yowsup.connectionmanager.jid.replace("@whatsapp.net","")+"\r\n";hBAOS+="--"+boundary+"\r\n";hBAOS+='Content-Disposition: form-data; name="file"; filename="'+crypto+'"\r\n';hBAOS+="Content-Type: "+filetype+"\r\n\r\n";var fBAOS="\r\n--"+boundary+"--\r\n";contentLength+=hBAOS.length;contentLength+=fBAOS.length;contentLength+=blob.size;var POST="POST "+uploadUrl+"\r\n";POST+="Content-Type: multipart/form-data; boundary="+
boundary+"\r\n";POST+="Host: "+host+"\r\n";POST+="User-Agent: "+CoSeMe.config.tokenData.u+"\r\n";POST+="Content-Length: "+contentLength+"\r\n\r\n";logger.log("POST:",POST);logger.log("hBAOS:",hBAOS);logger.log("Sending request...");_socket.send(_str2ab(POST));_socket.send(_str2ab(hBAOS));var totalsent=0;var buf=1024;var status=0;var lastEmit=0;logger.log("Sending the file in chunks of",buf,"bytes");var end;while(totalsent<filesize){end=totalsent+buf;_socket.send(blobAsArrayBuffer.slice(totalsent,
end));status=Math.floor(totalsent*100/filesize);if(lastEmit!=status&&(status!=100&&filesize>12288))if(progressCb)progressCb(status);lastEmit=status;blob=blob.slice(1024,blob.size);totalsent=totalsent+buf;logger.log("Sent",totalsent,"bytes")}logger.log("All data sent, going to send final BAOS");_socket.send(_str2ab(fBAOS));logger.log("All sent. Have fun with _socket.ondata()!")}};var datalatin1="";_socket.ondata=function(event){logger.log("Got some data!");datalatin1+=_latin1(new Uint8Array(event.data));
var contentLength=function(){var idx=datalatin1.indexOf("Content-Length: ");var doubleRC=datalatin1.indexOf("\r\n\r\n");if(idx===-1||!doubleRC)return 0;var a=datalatin1.substring(idx,datalatin1.indexOf("\r\n",idx));var b=a.split(":")[1];contentLength=parseInt(b,10);logger.log("Content length:",contentLength);return contentLength}();var body="";if(contentLength)body=function(){var rv=datalatin1.substring(datalatin1.length-contentLength,datalatin1.length);if(rv.length!==contentLength)rv="";return rv}();
if(datalatin1.length>MAX_UPLOAD_BODY_ANSWER||body){logger.log("Enough data, closing socket and start parsing");if(progressCb)progressCb(100);var json;try{json=JSON.parse(body)}catch(e){logger.error("Media exception:",e);if(errorCb){errorCb("JSON not valid -- "+e);return}}if(json.url){logger.log("We got an URL on the result:",json.url);if(successCb)successCb(json.url)}else if(errorCb)errorCb("No URL in result");errorCb=undefined;_socket.close()}else logger.log("Not enough data, continue reading from the socket")}}
return{download:download,upload:upload}}());
CoSeMe.namespace("connection",function(){var _connection;function Connection(){if(!_connection)_connection=Object.create(Connection.prototype);return _connection}Connection.prototype.connect=function(host,port,options,onSuccess,onError){var socket=navigator.mozTCPSocket.open(host,port,options);socket.onerror=onError;socket.onopen=function _connectionSuccess(){_connection.socket=socket;setErrorHandlers();setBinaryStreams();onSuccess.apply(this,arguments)}};function setErrorHandlers(){_connection.socket.onerror=
fire("onconnectionlost");_connection.socket.onclose=fire("onconnectionclosed")}function fire(event){return function(){var handler=_connection[event];if(typeof handler==="function")handler.apply(this,arguments)}}function setBinaryStreams(){_connection.reader=new CoSeMe.protocol.BinaryReader(_connection);_connection.writer=new CoSeMe.protocol.BinaryWriter(_connection)}return Connection}());
CoSeMe.namespace("time",function(){function parseIso(iso){return new Date(iso)}function utcToLocal(dt){return dt}function utcTimestamp(){return Math.floor(Date.now()/1E3)}function datetimeToTimestamp(dt){return Math.floor(dt.getTime()/1E3)}return{parseIso:parseIso,utcToLocal:utcToLocal,utcTimestamp:utcTimestamp,datetimeToTimestamp:datetimeToTimestamp}}());
CoSeMe.namespace("auth",function(){var logger=new CoSeMe.common.Logger("auth");var ByteArrayWA=CoSeMe.utils.ByteArrayWA;var ATR_EXPIRATION="expiration";var ATR_KIND="kind";var KIND_PAID="paid";var KIND_FREE="free";var ATR_STATUS="status";var STATUS_EXPIRED="expired";var STATUS_ACTIVE="active";var connection=null;var authenticated=false;var supportsReceiptAcks=true;var expireDate=null;var accountKind=null;var outputKey;var inputKey;var userName;var password;var ProtocolTreeNode=CoSeMe.protocol.Tree;
function sendFeatures(){var tag="stream:features";var options={children:[new ProtocolTreeNode("receipt_acks"),new ProtocolTreeNode("w:profile:picture",{attributes:{"type":"all"}}),new ProtocolTreeNode("w:profile:picture",{attributes:{"type":"group"}}),new ProtocolTreeNode("notification",{attributes:{"type":"participant"}}),new ProtocolTreeNode("status")]};var toWrite=new ProtocolTreeNode(tag,options);connection.writer.write(toWrite)}function sendAuth(aUsr){var node=new ProtocolTreeNode("auth",{attributes:{"user":aUsr,
"xmlns":"urn:ietf:params:xml:ns:xmpp-sasl","mechanism":"WAUTH-1"},data:""});connection.writer.write(node)}function getAuthBlob(aChallengeData,aUsr,aPwd){try{var key=CoSeMe.auth.KeyStream.keyFromPasswordAndNonce(aPwd,aChallengeData);var key2=CoSeMe.auth.KeyStream.keyFromPasswordAndNonce(aPwd,aChallengeData);connection.reader.inputKey=inputKey=new CoSeMe.auth.KeyStream(key,"input");outputKey=new CoSeMe.auth.KeyStream(key2,"output");var utcNow=CryptoJS.enc.Latin1.parse(Number(CoSeMe.time.utcTimestamp()).toString());
var msg=CryptoJS.enc.Latin1.parse(aUsr);msg.concat(CryptoJS.enc.Hex.parse(aChallengeData));msg.concat(utcNow);logger.log("Cleartext message: ",msg.toString());var encoded=outputKey.encodeMessage((new ByteArrayWA(msg.sigBytes)).writeAll(msg));var macLength=CoSeMe.config.auth.hmacLength;var ba=new ByteArrayWA(macLength+encoded.text.array.sigBytes);for(var i=0;i<macLength;i++)ba.write(encoded.hmacSHA1.get(i));return ba.writeAll(encoded.text.array)}catch(x){logger.error(x);return null}}function sendResponse(aChallengeData,
aUsr,aPwd){try{logger.log("Generating response");var authBlob=getAuthBlob(aChallengeData,aUsr,aPwd);var node=new ProtocolTreeNode("response",{attributes:{"xmlns":"urn:ietf:params:xml:ns:xmpp-sasl"},data:CryptoJS.enc.Latin1.stringify(authBlob.array)});connection.writer.write(node)}catch(x){logger.error(x)}}function authenticationFailed(){logger.log("Auth failed!")}function authenticationComplete(){authenticated=true}function readSuccess(node){try{logger.log("Login status:",node.tag);if(node.tag===
"failure"){authenticationFailed();return-1}ProtocolTreeNode.require(node,"success");var expiration=node.getAttributeValue(ATR_EXPIRATION);if(!expiration){logger.log("Expires:",expiration);expireDate=expiration}var kind=node.getAttributeValue(ATR_KIND);logger.log("Account type:",kind);if(kind===KIND_PAID)accountKind=1;else if(kind===KIND_FREE)accountKind=0;else accountKind=-1;var status=node.getAttributeValue(ATR_STATUS);logger.log("Account status:",status);if(status===STATUS_EXPIRED)throw new Error("Account expired on "+
expireDate);if(status===STATUS_ACTIVE){if(!expiration);}else accountKind=1;connection.writer.outputKey=outputKey;authenticationComplete();return true}catch(x){logger.error(x);return false}}function authenticate(aUsr,aPwd,aCallback){function onError(evt){var err=evt.data;var wrapperErr;if(err&&typeof err==="object")wrapperErr={name:err.name,type:err.type,message:err.message};else wrapperErr=err;logger.log("Error authenticating:",wrapperErr);aCallback(null)}function login(evt){var step=0;connection.reader.startListening(connection);
connection.reader.onStreamStart=function(err){if(err){logger.error(err);aCallback(null)}step++;logger.log("Got Stream Start!")};connection.reader.onTree=function(err,tree){if(err)throw err;var root,node;try{switch(step){case 1:root=tree;logger.log("Reading features and challenge... The tree is",root?"not null":"null");if(root===null){var msg="Out of loop while reading features and challenge.";logger.error(msg);throw new Error(msg);}if(root.tag==="stream:features"){logger.log("Got features!");var receipt=
root.getChild("receipt_acks");if(receipt!==undefined)supportsReceiptAcks=receipt}else if(root.tag==="challenge"){logger.log("Got challenge!");sendResponse(root.hexData,aUsr,aPwd);step++}break;case 2:logger.log("Trying to get the success data...");node=tree;if(node){var success=readSuccess(node);connection.reader.onTree=undefined;connection.reader.onStreamStart=undefined;connection.socket.suspend();connection.jid=aUsr+"@"+CoSeMe.config.auth.domain;if(success===-1)aCallback(-1);else aCallback(success?
connection:null)}break}}catch(err){logger.error(x);aCallback(null)}};try{logger.log("Starting stream...");connection.writer.streamStart(CoSeMe.config.auth.domain,CoSeMe.config.tokenData.r);logger.log("Sending features...");sendFeatures();logger.log("Sending auth...");sendAuth(aUsr)}catch(x){logger.error(x);throw x;}}connection=new CoSeMe.connection.Connection;var host=CoSeMe.config.auth.host;var port=CoSeMe.config.auth.port;logger.log("Connecting to:",host+":"+port);connection.connect(host,port,CoSeMe.config.auth.options||
{},login,onError)}return{authenticate:authenticate,isAuthenticated:function isAuthenticated(){return authenticated}}}());
CoSeMe.namespace("auth",function(){var logger=new CoSeMe.common.Logger("KeyStream");var ByteArrayWA=CoSeMe.utils.ByteArrayWA;function KeyStream(aKey,aName){this.name=aName;this.key=aKey;this.encryptor=CryptoJS.algo.RC4WP.createEncryptor(this.key,CoSeMe.config.auth.rc4Options)}KeyStream.keyFromPasswordAndNonce=function(aPwd,aChallengeData){try{logger.log("aChallengeData:",aChallengeData);logger.log("aPwd:",aPwd);var credentials=CryptoJS.enc.Base64.parse(aPwd);logger.log("Credentials:",credentials);
var salt=CryptoJS.enc.Hex.parse(aChallengeData);logger.log("salt: ",salt);var k=CryptoJS.PBKDF2(credentials,salt,CoSeMe.config.auth.pbkdf2Options);logger.log("Key from password and nonce:",k);return k}catch(x){logger.error(x);return null}};KeyStream.prototype.decodeMessage=function(cipherTxt,aHmacSHA1){var cipherData=cipherTxt.array;var hmacCal=CryptoJS.HmacSHA1_IP(cipherData,this.key).toString(CryptoJS.enc.Hex);var hmacTxt=CryptoJS.enc.Hex.stringify(aHmacSHA1.array);if(hmacTxt!==hmacCal.substring(0,
hmacTxt.length)){logger.error("INVALID MAC!");throw new Error("Invalid MAC");}var plainTxt=this.encryptor.finalize(cipherData);return cipherTxt};KeyStream.prototype.encodeMessage=function(aMsg){var cipherwords=aMsg.array;this.encryptor.finalize(cipherwords);var hash=CryptoJS.HmacSHA1_IP(cipherwords,this.key);return{text:aMsg,hmacSHA1:(new ByteArrayWA(hash.sigBytes)).writeAll(hash)}};return KeyStream}());
